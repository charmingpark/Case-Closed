function makeMultiplesOfDigit2(num1, num2) {
  if (num1 > num2){
    [num1,num2] = [num2,num1]
  }
  // 어느 것이 작고 크던 상관없도록 무력화 시키기.

  if (num1 % 2){
    num1 += 1
  }
  // 첫번째가 홀수 라면 짝수로 만들어 주고 시작.

  let i = 0
  for (let N = 0; num1 + N <= num2; N += 2){
    i += 1;
  }

  if (!num1){
    i -= 1
  }
  // 첫번째가 짝수로 끝나서 한 개 더 더할 경우엔
  // 한 개 빼주고 배출 함.
  
  return i
}


/*
a와 b 사이, 즉 a초과 b미만인 자연수의 개수를 n이라고 하면
n=(b-a)-1 입니다.

// 예) 7-2 === 6543 (4개)
// 예) 6-2 === 543 (3개)
// 예) 7-1 === 65432 (5개)

 

i) n이 짝수인 경우
  이 때는 a, b가 홀수와 짝수 또는 짝수와 홀수일 때로, 
  n개의 자연수 안에 있는 홀수와 짝수의 개수가 똑같이 n/2 가 됩니다.

// 예) 7-2 === 6543 (4개)

 

ii) n이 홀수인 경우

  이 때는 a, b가 둘 다 홀수 또는 둘 다 짝수라는 뜻인데, 각각의 경우를 다시 나누어봐야 합니다.

// 예) 6-2 === 543 (3개)   ----둘 다 짝수
// 예) 7-1 === 65432 (5개) ----둘 다 홀수
 


  1) a, b가 둘 다 홀수인 경우

    n개의 자연수는 짝수에서 시작해서 짝수로 끝나므로 짝수가 홀수보다 1개 더 많습니다.

    따라서 홀수는 (n-1)/2 개, 짝수는 (n-1)/2 + 1 = (n+1)/2 개 입니다.

  // 예) 7-1 === 65432 (n = 5개) ----둘 다 홀수
  // 이 중에 짝수 === 6 4 2       ----(5-1)/2 + 1 = 3
  // 이 중에 홀수 === 5 3         ----(5-1)/2 = 2

 
  2) a, b가 둘 다 짝수인 경우

    n개의 자연수는 홀수에서 시작해서 홀수로 끝나므로 홀수가 짝수보다 1개 더 많습니다.

    따라서 위와 반대로 홀수는 (n+1)/2 개, 짝수는 (n-1)/2 개 입니다.

  // 예) 6-2 === 543 (n = 3개)   ----둘 다 짝수
  // 이 중에 짝수 === 4           ----(3-1)/2 = 1
  // 이 중에 홀수 === 5 3         ----(3+1)/2 = 2

 

이를 공식화하면

 

a, b의 홀짝이 다를 때 홀수와 짝수는 각각 (b-a)/2 개

a, b가 둘 다 홀수일 때 홀수는 (b-a-1)/2 개, 짝수는 (b-a+1)/2 개

a, b가 둘 다 짝수일 때 홀수는 (b-a+1)/2 개, 짝수는 (b-a-1)/2 개
*/